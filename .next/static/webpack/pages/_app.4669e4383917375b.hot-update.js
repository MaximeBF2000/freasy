"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/components/TaxConverter/useConverter.hook.js":
/*!**********************************************************!*\
  !*** ./src/components/TaxConverter/useConverter.hook.js ***!
  \**********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useConverter\": function() { return /* binding */ useConverter; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\n\nvar TAXE_INFOS = {\n  COTISATION: 0.22,\n  FORMATION: 0.015,\n\n  get TOTAL() {\n    return 1 - (this.COTISATION + this.FORMATION);\n  }\n\n};\nvar useConverter = function useConverter() {\n  _s();\n\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0),\n      brut = _useState[0],\n      setBrut = _useState[1];\n\n  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(brut * TAXE_INFOS.TOTAL),\n      net = _useState2[0],\n      setNet = _useState2[1];\n\n  var brutToNet = function brutToNet(e) {\n    var newBrut = e.target.value;\n    setBrut(newBrut);\n    setNet(parseFloat(newBrut) * TAXE_INFOS.TOTAL);\n  };\n\n  var netToBrut = function netToBrut(e) {\n    var newNet = e.target.value;\n    setNet(newNet);\n    setBrut(parseFloat(newNet) / TAXE_INFOS.TOTAL);\n  };\n\n  return {\n    brut: brut,\n    setBrut: setBrut,\n    net: net,\n    setNet: setNet,\n    brutToNet: brutToNet,\n    netToBrut: netToBrut\n  };\n};\n\n_s(useConverter, \"APeITG5y+HulOUClZLOUtQb5pdY=\");\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9UYXhDb252ZXJ0ZXIvdXNlQ29udmVydGVyLmhvb2suanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUVBLElBQU1DLFVBQVUsR0FBRztBQUNqQkMsRUFBQUEsVUFBVSxFQUFFLElBREs7QUFFakJDLEVBQUFBLFNBQVMsRUFBRSxLQUZNOztBQUdqQixNQUFJQyxLQUFKLEdBQVk7QUFDVixXQUFPLEtBQUssS0FBS0YsVUFBTCxHQUFrQixLQUFLQyxTQUE1QixDQUFQO0FBQ0Q7O0FBTGdCLENBQW5CO0FBUU8sSUFBTUUsWUFBWSxHQUFHLFNBQWZBLFlBQWUsR0FBTTtBQUFBOztBQUNoQyxrQkFBd0JMLCtDQUFRLENBQUMsQ0FBRCxDQUFoQztBQUFBLE1BQU9NLElBQVA7QUFBQSxNQUFhQyxPQUFiOztBQUNBLG1CQUFzQlAsK0NBQVEsQ0FBQ00sSUFBSSxHQUFHTCxVQUFVLENBQUNHLEtBQW5CLENBQTlCO0FBQUEsTUFBT0ksR0FBUDtBQUFBLE1BQVlDLE1BQVo7O0FBRUEsTUFBTUMsU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBQUMsQ0FBQyxFQUFJO0FBQ3JCLFFBQU1DLE9BQU8sR0FBR0QsQ0FBQyxDQUFDRSxNQUFGLENBQVNDLEtBQXpCO0FBQ0FQLElBQUFBLE9BQU8sQ0FBQ0ssT0FBRCxDQUFQO0FBQ0FILElBQUFBLE1BQU0sQ0FBQ00sVUFBVSxDQUFDSCxPQUFELENBQVYsR0FBc0JYLFVBQVUsQ0FBQ0csS0FBbEMsQ0FBTjtBQUNELEdBSkQ7O0FBTUEsTUFBTVksU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBQUwsQ0FBQyxFQUFJO0FBQ3JCLFFBQU1NLE1BQU0sR0FBR04sQ0FBQyxDQUFDRSxNQUFGLENBQVNDLEtBQXhCO0FBQ0FMLElBQUFBLE1BQU0sQ0FBQ1EsTUFBRCxDQUFOO0FBQ0FWLElBQUFBLE9BQU8sQ0FBQ1EsVUFBVSxDQUFDRSxNQUFELENBQVYsR0FBcUJoQixVQUFVLENBQUNHLEtBQWpDLENBQVA7QUFDRCxHQUpEOztBQU1BLFNBQU87QUFDTEUsSUFBQUEsSUFBSSxFQUFKQSxJQURLO0FBRUxDLElBQUFBLE9BQU8sRUFBUEEsT0FGSztBQUdMQyxJQUFBQSxHQUFHLEVBQUhBLEdBSEs7QUFJTEMsSUFBQUEsTUFBTSxFQUFOQSxNQUpLO0FBS0xDLElBQUFBLFNBQVMsRUFBVEEsU0FMSztBQU1MTSxJQUFBQSxTQUFTLEVBQVRBO0FBTkssR0FBUDtBQVFELENBeEJNOztHQUFNWCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9UYXhDb252ZXJ0ZXIvdXNlQ29udmVydGVyLmhvb2suanM/OGZmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuXG5jb25zdCBUQVhFX0lORk9TID0ge1xuICBDT1RJU0FUSU9OOiAwLjIyLFxuICBGT1JNQVRJT046IDAuMDE1LFxuICBnZXQgVE9UQUwoKSB7XG4gICAgcmV0dXJuIDEgLSAodGhpcy5DT1RJU0FUSU9OICsgdGhpcy5GT1JNQVRJT04pXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHVzZUNvbnZlcnRlciA9ICgpID0+IHtcbiAgY29uc3QgW2JydXQsIHNldEJydXRdID0gdXNlU3RhdGUoMClcbiAgY29uc3QgW25ldCwgc2V0TmV0XSA9IHVzZVN0YXRlKGJydXQgKiBUQVhFX0lORk9TLlRPVEFMKVxuXG4gIGNvbnN0IGJydXRUb05ldCA9IGUgPT4ge1xuICAgIGNvbnN0IG5ld0JydXQgPSBlLnRhcmdldC52YWx1ZVxuICAgIHNldEJydXQobmV3QnJ1dClcbiAgICBzZXROZXQocGFyc2VGbG9hdChuZXdCcnV0KSAqIFRBWEVfSU5GT1MuVE9UQUwpXG4gIH1cblxuICBjb25zdCBuZXRUb0JydXQgPSBlID0+IHtcbiAgICBjb25zdCBuZXdOZXQgPSBlLnRhcmdldC52YWx1ZVxuICAgIHNldE5ldChuZXdOZXQpXG4gICAgc2V0QnJ1dChwYXJzZUZsb2F0KG5ld05ldCkgLyBUQVhFX0lORk9TLlRPVEFMKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBicnV0LFxuICAgIHNldEJydXQsXG4gICAgbmV0LFxuICAgIHNldE5ldCxcbiAgICBicnV0VG9OZXQsXG4gICAgbmV0VG9CcnV0XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsIlRBWEVfSU5GT1MiLCJDT1RJU0FUSU9OIiwiRk9STUFUSU9OIiwiVE9UQUwiLCJ1c2VDb252ZXJ0ZXIiLCJicnV0Iiwic2V0QnJ1dCIsIm5ldCIsInNldE5ldCIsImJydXRUb05ldCIsImUiLCJuZXdCcnV0IiwidGFyZ2V0IiwidmFsdWUiLCJwYXJzZUZsb2F0IiwibmV0VG9CcnV0IiwibmV3TmV0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/TaxConverter/useConverter.hook.js\n");

/***/ })

});